// .row
//     width: 100%
//     flex 1 0 auto
//     flex-direction row
//     position: relative
//     margin-left: auto
//     margin-right: auto
//     margin-bottom 20px
//     flex-conainer()
$screens = {
    sm: 600px,
    md: 992px,
    lg: 1200px
}


.section
    flex-conainer()
    flex-direction  row
/*
 *
 * Uncomment and set these variables to customize the grid.
 *
 * :root {
 *  $gutter-width: 1rem;
 *  $outer-margin: 2rem;
 *  $gutter-compensation: calc( var( $gutter-width / 2 ) * -1 );
 *  $half-gutter-width: calc( var( $gutter-width / 2 ) );
 *  $screen-xs-min: 30em;
 *  $screen-sm-min: 48em;
 *  $screen-md-min: 62em;
 *  $screen-lg-min: 75em;
 *  $container.sm: calc( 45rem + var( $gutter-width ) );
 *  $container.md: calc( 60rem + var( $gutter-width ) );
 *  $container.lg: calc( 70rem + var( $gutter-width ) );
 * }
 *
*/

$sm-viewport = $screens.sm
$md-viewport = $screens.md
$lg-viewport = $screens.lg

$gutter-width        = 1rem;
$outer-margin        = 2rem;
$gutter-compensation = ( ($gutter-width / 2) * -1 );
$half-gutter-width   = ( ($gutter-width / 2) );
$screen-xs-min       = 30em;
$screen-sm-min       = 48em;
$screen-md-min       = 62em;
$screen-lg-min       = 75em;
$container = {
    xs               : ( 60rem + $gutter-width ),
    sm               : ( 45rem + $gutter-width ),
    md               : ( 60rem + $gutter-width ),
    lg               : ( 70rem + $gutter-width )
}

apply-grid-properties()
    box-sizing: border-box;
    position: relative;
    display: flex;
    flex: 0 1 auto;
    flex-direction: column;
    flex-grow: 0;
    flex-shrink: 0;
    padding-right: $half-gutter-width;
    padding-left: $half-gutter-width;



apply-grid-options(screen)

    .start-{screen}
      justify-content: flex-start;
      text-align: start;
    .center-{screen}
      justify-content: center;
      text-align: center;
    .end-{screen}
      justify-content: flex-end;
      text-align: end;
    .top-{screen}
      align-items: flex-start;
    .middle-{screen}
      align-items: center;
    .bottom-{screen}
      align-items: flex-end;
    .around-{screen}
      justify-content: space-around;
    .between-{screen}
      justify-content: space-between;
    .first-{screen}
      order: -1;
    .last-{screen}
      order: 1;

create-grid(screen=false)

    for size in 1..12
        value = (100% / 12) * size
        if screen
            .flex-{screen}-{size}
                apply-grid-properties()
                flex-basis: value
                max-width : value
            .offset-{screen}-{size}
                margin-left: value
        else
            .flex-{size}
                apply-grid-properties()
                flex-basis: value
                max-width : value
            .offset-{size}
                margin-left: value


create-responsive-grid-from(screen)

    apply-grid-options(screen)

    .container
        width: $container[screen]

    .flex-{screen}
        apply-grid-properties()
        flex-grow: 1;
        flex-basis: 0;
        max-width: 100%;

    create-grid(screen)


.container-fluid {
  margin-right: auto;
  margin-left: auto;
  padding-right: $outer-margin;
  padding-left:  $outer-margin;
}

.row {
  box-sizing: border-box;
  position: relative
  display: flex;
  flex: 0 1 auto;
  flex-direction: row;
  flex-wrap: wrap;
  margin-bottom: 8px
  // margin-right: $gutter-compensation;
  // margin-left: $gutter-compensation;
}

.row.reverse {
  flex-direction: row-reverse;
}

.flex.reverse {
  flex-direction: column-reverse;
}


.flex-start
    justify-content: flex-start;
    text-align: start;
.flex-center
    justify-content: center;
    text-align: center;
.flex-end
    justify-content: flex-end;
    text-align: end;
.flex-top
    align-items: flex-start;
.flex-middle
    align-items: center;
.flex-bottom
    align-items: flex-end;
.flex-around
    justify-content: space-around;
.flex-between
    justify-content: space-between;
.flex-first
    order: -1;
.flex-last
    order: 1;


create-grid()
create-responsive-grid-from(xs);

@media only screen and (min-width: $screens.sm)
    create-responsive-grid-from(sm);

@media only screen and (min-width: $screens.md)
    create-responsive-grid-from(md);

@media only screen and (min-width: $screens.lg)
    create-responsive-grid-from(lg);

